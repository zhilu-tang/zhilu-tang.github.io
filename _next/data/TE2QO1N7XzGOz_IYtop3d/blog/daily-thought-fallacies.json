{"pageProps":{"postMetadata":{"title":"Daily Thought Fallacies","description":"A case study about a trapped thought process.","imgName":"daily-thought-fallacies/daily-thought-fallacies.png","date":"Jul 1, 2025","tags":["algorithm","thought-process"],"keywords":["trap","algorithm","thought"],"id":"daily-thought-fallacies"},"postContent":{"compiledSource":"var d=Object.defineProperty,m=Object.defineProperties;var u=Object.getOwnPropertyDescriptors;var i=Object.getOwnPropertySymbols;var l=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;var p=(t,a,n)=>a in t?d(t,a,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[a]=n,e=(t,a)=>{for(var n in a||(a={}))l.call(a,n)&&p(t,n,a[n]);if(i)for(var n of i(a))o.call(a,n)&&p(t,n,a[n]);return t},s=(t,a)=>m(t,u(a));var h=(t,a)=>{var n={};for(var r in t)l.call(t,r)&&a.indexOf(r)<0&&(n[r]=t[r]);if(t!=null&&i)for(var r of i(t))a.indexOf(r)<0&&o.call(t,r)&&(n[r]=t[r]);return n};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var r=n,{components:t}=r,a=h(r,[\"components\"]);return mdx(MDXLayout,s(e(e({},layoutProps),a),{components:t,mdxType:\"MDXLayout\"}),mdx(\"p\",null,mdx(\"img\",e({parentName:\"p\"},{src:\"daily-thought-fallacies/daily-thought-fallacies.png\",alt:\"Daily thought fallacies\"}))),mdx(\"h6\",null,\"Published on: \",mdx(\"strong\",{parentName:\"h6\"},\"Jul 1, 2025\")),mdx(\"h2\",null,\"\\u95EE\\u9898\"),mdx(\"h3\",null,\"\\u8BC4\\u4EF7\\u4E0B\\u9762\\u4EE3\\u7801\\u7684\\u6574\\u4F53\\u601D\\u8DEF\\u3001\\u5173\\u952E\\u5B9E\\u73B0\\u5BF9\\u9519\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-java\"}),`    static int[][] fh;\n    public int trapRainWaterWA2(int[][] heightMap) {\n        fh = heightMap;\n        int m = heightMap.length, n = heightMap[0].length;\n        int dir[] = {1,0,-1,0,1};\n        int ans = 0;\n        record Cell(int i, int j) implements Comparable<Cell>{\n            public int compareTo(Cell o){\n                return fh[i][j] - fh[o.i][o.j];\n            }\n        }\n        PriorityQueue<Cell> pq = new PriorityQueue<Cell>();\n        boolean used[][] = new boolean[m][n], visited[][];\n        for(int i = 0; i<m; i++){\n            for(int j = 0; j<n; j++){\n                if(!used[i][j]){\n                    pq.clear();\n                    visited = new boolean[m][n];\n                    // start\n                    var start = new Cell(i,j);\n                    pq.offer(start);\n                    visited[i][j] = true;\n                    used[i][j] = true;\n                    int bottom = heightMap[i][j], count = 0;\n                    while(!pq.isEmpty()){\n                        var c = pq.poll();\n                        int curh = heightMap[c.i][c.j];\n                        if(curh > bottom){\n                            ans += (curh - bottom) * count;\n                            bottom = curh;\n                        }\n                        if(c.i == 0 || c.j == 0 || c.i == m-1 || c.j == n-1)break;\n                        if(!used[c.i][c.j]){\n                            count++;\n                        }\n                        used[c.i][c.j] = true;\n                        for(int d = 0; d<4; d++){\n                            int x = c.i+dir[d], y = c.j+dir[d+1];\n                            if(x < 0 || y < 0 || x >= m || y >= n || visited[x][y])continue;\n                            visited[x][y] = true;\n                            pq.offer(new Cell(x, y));\n                        }\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n`)),mdx(\"h2\",null,\"\\u89E3\\u7B54\"),mdx(\"p\",null,\"The code attempts to solve the \",mdx(\"strong\",{parentName:\"p\"},\"Trapping Rain Water II\"),\" problem, where water can be trapped in a 2D elevation map. However, the implementation contains several \",mdx(\"strong\",{parentName:\"p\"},\"logical and structural errors\"),\", which prevent it from working correctly.\"),mdx(\"hr\",null),mdx(\"h3\",null,\"\\u2705 Overall Idea\"),mdx(\"p\",null,\"The idea is based on using a \",mdx(\"strong\",{parentName:\"p\"},\"priority queue (min-heap)\"),\" to simulate the process of water flowing from the boundary inward, similar to Dijkstra's algorithm:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"Start from the \",mdx(\"strong\",{parentName:\"li\"},\"border cells\"),\" as boundaries cannot trap water.\"),mdx(\"li\",{parentName:\"ul\"},\"Use a \",mdx(\"strong\",{parentName:\"li\"},\"min-heap\"),\" to always process the lowest height cell next.\"),mdx(\"li\",{parentName:\"ul\"},\"As you expand inward, any lower area surrounded by higher walls can potentially trap water.\")),mdx(\"p\",null,\"This is a valid approach for this problem.\"),mdx(\"hr\",null),mdx(\"h3\",null,\"\\u274C Key Implementation Errors\"),mdx(\"h4\",null,\"1. \",mdx(\"strong\",{parentName:\"h4\"},\"Incorrect BFS/Heap Usage\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-java\"}),`if(c.i == 0 || c.j == 0 || c.i == m-1 || c.j == n-1) break;\n`)),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"This line breaks the search when reaching any border cell.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"Problem\"),\": The algorithm should start from the borders and explore inward. Instead, it stops as soon as it reaches a border, effectively ignoring the correct flow logic.\")),mdx(\"h4\",null,\"2. \",mdx(\"strong\",{parentName:\"h4\"},\"Misuse of \",mdx(\"inlineCode\",{parentName:\"strong\"},\"used\"),\" and \",mdx(\"inlineCode\",{parentName:\"strong\"},\"visited\"))),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"used\"),\" seems to mark whether a cell has been processed globally, while \",mdx(\"inlineCode\",{parentName:\"li\"},\"visited\"),\" is reinitialized in each loop.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"Problem\"),\": The inner BFS (\",mdx(\"inlineCode\",{parentName:\"li\"},\"pq\"),\") is not tracking global visited status properly, leading to:\",mdx(\"ul\",{parentName:\"li\"},mdx(\"li\",{parentName:\"ul\"},\"Re-processing of already visited regions.\"),mdx(\"li\",{parentName:\"ul\"},\"Incomplete traversal.\")))),mdx(\"h4\",null,\"3. \",mdx(\"strong\",{parentName:\"h4\"},\"Wrong Calculation of Trapped Water\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-java\"}),`if(!used[c.i][c.j]){\n    count++;\n}\n`)),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"count\"),\" is used to track how many cells are in the current basin.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"Problem\"),\": It doesn't account for the actual volume of water trapped per unit height difference correctly.\"),mdx(\"li\",{parentName:\"ul\"},\"Also, \",mdx(\"inlineCode\",{parentName:\"li\"},\"used[i][j] = true;\"),\" is set after checking, which may cause incorrect counting.\")),mdx(\"h4\",null,\"4. \",mdx(\"strong\",{parentName:\"h4\"},\"Use of Local Class Inside Method (Java 16+ only)\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-java\"}),`record Cell(int i, int j) implements Comparable<Cell>\n`)),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"Issue\"),\": This uses a local record inside a method, which is only supported in Java 16+. If the environment supports it, that's fine, but if not, it will fail to compile.\")),mdx(\"p\",null,\"Also, the \",mdx(\"inlineCode\",{parentName:\"p\"},\"compareTo\"),\" method uses \",mdx(\"inlineCode\",{parentName:\"p\"},\"fh[i][j]\"),\", but \",mdx(\"inlineCode\",{parentName:\"p\"},\"fh\"),\" is a class-level variable (\",mdx(\"inlineCode\",{parentName:\"p\"},\"this.fh\"),\"). This could lead to confusion or bugs if \",mdx(\"inlineCode\",{parentName:\"p\"},\"fh\"),\" changes during execution.\"),mdx(\"h4\",null,\"5. \",mdx(\"strong\",{parentName:\"h4\"},\"Redundant Outer Loop\")),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"The outer double loop over all \",mdx(\"inlineCode\",{parentName:\"li\"},\"(i,j)\"),\" is unnecessary.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"Correct approach\"),\": Initialize the heap with all border cells first, then expand inward \\u2014 no need to re-start BFS from every unvisited cell.\")),mdx(\"hr\",null),mdx(\"h3\",null,\"\\u{1F6E0}\\uFE0F Suggested Fixes\"),mdx(\"h4\",null,\"\\u2714\\uFE0F Corrected Algorithm Outline\"),mdx(\"ol\",null,mdx(\"li\",{parentName:\"ol\"},mdx(\"strong\",{parentName:\"li\"},\"Initialize a min-heap\"),\" with all the border cells.\"),mdx(\"li\",{parentName:\"ol\"},\"Maintain a global \",mdx(\"inlineCode\",{parentName:\"li\"},\"visited\"),\" matrix.\"),mdx(\"li\",{parentName:\"ol\"},\"While the heap is not empty:\",mdx(\"ul\",{parentName:\"li\"},mdx(\"li\",{parentName:\"ul\"},\"Pop the lowest cell.\"),mdx(\"li\",{parentName:\"ul\"},\"For its four neighbors:\",mdx(\"ul\",{parentName:\"li\"},mdx(\"li\",{parentName:\"ul\"},\"If not visited:\",mdx(\"ul\",{parentName:\"li\"},mdx(\"li\",{parentName:\"ul\"},\"If neighbor is lower than current height, it can trap water.\"),mdx(\"li\",{parentName:\"ul\"},\"Add neighbor to the heap with its own height.\"))))))),mdx(\"li\",{parentName:\"ol\"},\"Accumulate trapped water accordingly.\")),mdx(\"h4\",null,\"\\u2714\\uFE0F Code Skeleton Fix\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-java\"}),`public int trapRainWater(int[][] heightMap) {\n    if (heightMap == null || heightMap.length == 0 || heightMap[0].length == 0)\n        return 0;\n\n    int m = heightMap.length, n = heightMap[0].length;\n    boolean[][] visited = new boolean[m][n];\n    PriorityQueue<int[]> pq = new PriorityQueue<>((a, b) -> a[2] - b[2]); // x, y, height\n    int[] dirs = {0, 1, 0, -1, 0};\n\n    // Initialize with boundary cells\n    for (int i = 0; i < m; i++) {\n        for (int j = 0; j < n; j++) {\n            if (i == 0 || j == 0 || i == m - 1 || j == n - 1) {\n                pq.offer(new int[]{i, j, heightMap[i][j]});\n                visited[i][j] = true;\n            }\n        }\n    }\n\n    int res = 0;\n    int[][] directions = {{-1, 0}, {1, 0}, {0, -1}, {0, 1}};\n    int maxHeight = 0;\n\n    while (!pq.isEmpty()) {\n        int[] curr = pq.poll();\n        int x = curr[0], y = curr[1], h = curr[2];\n        maxHeight = Math.max(maxHeight, h);\n\n        for (int[] dir : directions) {\n            int nx = x + dir[0], ny = y + dir[1];\n            if (nx >= 0 && ny >= 0 && nx < m && ny < n && !visited[nx][ny]) {\n                visited[nx][ny] = true;\n                if (heightMap[nx][ny] < maxHeight) {\n                    res += maxHeight - heightMap[nx][ny];\n                }\n                pq.offer(new int[]{nx, ny, Math.max(maxHeight, heightMap[nx][ny])});\n            }\n        }\n    }\n\n    return res;\n}\n`)),mdx(\"hr\",null),mdx(\"h3\",null,\"\\u2705 Summary\"),mdx(\"table\",null,mdx(\"thead\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"thead\"},mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Aspect\"),mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Evaluation\"))),mdx(\"tbody\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"Algorithm Design\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Partially correct conceptually, but flawed in implementation\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"Data Structures\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Priority Queue used incorrectly\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"Visited Tracking\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Confusing and incorrect\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"Water Calculation\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Incorrect logic\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"Code Structure\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Poor modularity and readability\")))),mdx(\"hr\",null),mdx(\"h3\",null,\"\\u{1F4CC} Conclusion\"),mdx(\"p\",null,\"While the general idea of using a priority queue to simulate water flow is sound, the current implementation fails due to incorrect handling of visited nodes, early termination, and wrong calculation of trapped water. A revised version using a proper BFS-like approach with a min-heap and global visited tracking is necessary for correctness.\"),mdx(\"h2\",null,\"\\u95EE\\u9898\"),mdx(\"p\",null,`\\u8FD9\\u79CD\\u601D\\u7EF4\\u6A21\\u5F0F\\u8E29\\u4E2D\\u4E86\\u54EA\\u4E2A\\u8BEF\\u533A\\uFF1F\\u8BD5\\u7740\\u4ECE\\u66F4\\u9AD8\\u7EF4\\u5EA6\\u5206\\u89E3\\u8FD9\\u79CD\\u601D\\u7EF4\\u6A21\\u5F0F\\u7684\\u95EE\\u9898\\u3002\\uFF08\\u80FD\\u591F\\u7406\\u89E3\\u6B63\\u786E\\u7684\\u505A\\u6CD5\\u662F\\u7B80\\u6D01\\u7684\\uFF0C\\u6A21\\u62DF\\u6C34\\u4F4D\\u4E0A\\u6DA8\\u9010\\u6E10\\u6DF9\\u6CA1\\u6240\\u6709\\u4F4D\\u7F6E\\uFF0C\\u7B2C\\u4E00\\u6B21\\u6DF9\\u6CA1\\u65F6\\u7684\\u9AD8\\u5DEE\\uFF0C\\u5C31\\u662F trap \\u7684\\u6C34\\u4F53\\u79EF\\uFF0C\\u6B63\\u786E\\u7684\\u505A\\u6CD5\\u8DB3\\u591F\\u7B80\\u6D01\\u6E05\\u6670\\uFF09\\u3002\nThis code's thought process falls into a `,mdx(\"strong\",{parentName:\"p\"},'\"\\u5C40\\u90E8\\u8D2A\\u5FC3 + \\u591A\\u91CD\\u5D4C\\u5957\\u72B6\\u6001\"'),\" thinking trap. It attempts to simulate the water trapping process by treating each basin separately and trying to compute local trapped water using nested loops and conditions.\"),mdx(\"hr\",null),mdx(\"h3\",null,\"\\u{1F9E0} \\u9AD8\\u7EF4\\u601D\\u7EF4\\u6A21\\u5F0F\\u5206\\u6790\\uFF08Higher-Level Pattern Analysis\\uFF09\"),mdx(\"h4\",null,\"1. \",mdx(\"strong\",{parentName:\"h4\"},\"\\u8BEF\\u533A\\u540D\\u79F0\\uFF1A\\u5C40\\u90E8\\u6A21\\u62DF\\u9677\\u9631 / \\u5206\\u6CBB\\u5F0F\\u66B4\\u529B\\uFF08Local Simulation Fallacy\\uFF09\")),mdx(\"p\",null,\"The developer tried to simulate water filling \",mdx(\"strong\",{parentName:\"p\"},\"locally\"),', assuming that each \"valley\" or enclosed area can be processed independently, starting from any unvisited cell.'),mdx(\"h5\",null,\"\\u{1F50D} \\u7279\\u5F81\\uFF1A\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"\\u4F7F\\u7528 \",mdx(\"inlineCode\",{parentName:\"li\"},\"for\"),\" \\u5FAA\\u73AF\\u4ECE\\u6BCF\\u4E2A\\u672A\\u8BBF\\u95EE\\u7684\\u70B9\\u51FA\\u53D1\\uFF0C\\u5C1D\\u8BD5\\u201C\\u72EC\\u7ACB\\u201D\\u5904\\u7406\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"\\u6BCF\\u6B21 BFS \\u90FD\\u8BD5\\u56FE\\u8BA1\\u7B97\\u5F53\\u524D\\u533A\\u57DF\\u7684\\u79EF\\u6C34\\u4F53\\u79EF\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"\\u6CA1\\u6709\\u7EDF\\u4E00\\u6C34\\u4F4D\\u4E0A\\u6DA8\\u6A21\\u578B\\uFF0C\\u800C\\u662F\\u5206\\u5757\\u5904\\u7406\\u3002\")),mdx(\"h5\",null,\"\\u274C \\u95EE\\u9898\\u672C\\u8D28\\uFF1A\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"\\u5FFD\\u89C6\\u4E86\\u5168\\u5C40\\u6C34\\u4F4D\\u9010\\u6E10\\u4E0A\\u5347\\u8FD9\\u4E00\\u7269\\u7406\\u8FC7\\u7A0B\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"\\u628A\\u95EE\\u9898\\u62C6\\u89E3\\u4E3A\\u591A\\u4E2A\\u5B50\\u95EE\\u9898\\uFF0C\\u53CD\\u800C\\u5F15\\u5165\\u590D\\u6742\\u8FB9\\u754C\\u6761\\u4EF6\\u548C\\u91CD\\u590D\\u8BA1\\u7B97\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"\\u7528 \",mdx(\"inlineCode\",{parentName:\"li\"},\"used[][]\"),\" \\u548C \",mdx(\"inlineCode\",{parentName:\"li\"},\"visited[][]\"),\" \\u6765\\u9632\\u6B62\\u91CD\\u590D\\u8BBF\\u95EE\\uFF0C\\u4F46\\u903B\\u8F91\\u6DF7\\u4E71\\u5BFC\\u81F4\\u9519\\u8BEF\\u3002\")),mdx(\"hr\",null),mdx(\"h4\",null,\"2. \",mdx(\"strong\",{parentName:\"h4\"},\"\\u8BA4\\u77E5\\u7EF4\\u5EA6\\uFF1A\\u6CA1\\u6709\\u62BD\\u8C61\\u51FA\\u6838\\u5FC3\\u53D8\\u91CF\\uFF08Failure to Abstract Core Variables\\uFF09\")),mdx(\"p\",null,\"\\u6B63\\u786E\\u7684\\u505A\\u6CD5\\u4E2D\\uFF0C\",mdx(\"strong\",{parentName:\"p\"},\"maxHeight\"),\" \\u662F\\u4E00\\u4E2A\\u6838\\u5FC3\\u62BD\\u8C61\\u53D8\\u91CF\\uFF0C\\u5B83\\u4EE3\\u8868\\u5F53\\u524D\\u7684\\u201C\\u6C34\\u4F4D\\u7EBF\\u201D\\u3002\"),mdx(\"h5\",null,\"\\u2705 \\u6B63\\u786E\\u89C6\\u89D2\\uFF1A\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"\\u6240\\u6709\\u79EF\\u6C34\\u90FD\\u53D1\\u751F\\u5728\\u67D0\\u4E00\\u70B9\\u4F4E\\u4E8E\\u5F53\\u524D\\u6C34\\u4F4D\\u65F6\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"\\u6C34\\u4F4D\\u662F\\u5355\\u8C03\\u4E0D\\u964D\\u7684\\uFF0C\\u968F\\u7740\\u4F18\\u5148\\u961F\\u5217\\u5F39\\u51FA\\u6700\\u5C0F\\u9AD8\\u5EA6\\u800C\\u9010\\u6B65\\u5347\\u9AD8\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"\\u6BCF\\u4E2A\\u70B9\\u53EA\\u88AB\\u8BBF\\u95EE\\u4E00\\u6B21\\uFF0C\\u907F\\u514D\\u91CD\\u590D\\u5224\\u65AD\\u548C\\u9519\\u8BEF\\u79EF\\u7D2F\\u3002\")),mdx(\"h5\",null,\"\\u274C \\u9519\\u8BEF\\u89C6\\u89D2\\uFF1A\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"\\u6CA1\\u6709\\u5EFA\\u7ACB\\u201C\\u5168\\u5C40\\u6C34\\u4F4D\\u201D\\u7684\\u62BD\\u8C61\\uFF0C\\u800C\\u662F\\u4F9D\\u8D56\\u5C40\\u90E8\\u6BD4\\u8F83\\uFF08\\u5982 \",mdx(\"inlineCode\",{parentName:\"li\"},\"curh > bottom\"),\"\\uFF09\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"\\u5C06 \",mdx(\"inlineCode\",{parentName:\"li\"},\"bottom\"),\" \\u5F53\\u4F5C\\u67D0\\u79CD\\u57FA\\u51C6\\u9AD8\\u5EA6\\uFF0C\\u4F46\\u5B9E\\u9645\\u4E0A\\u5B83\\u4E0D\\u5177\\u5907\\u5168\\u5C40\\u4E00\\u81F4\\u6027\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"\\u6CA1\\u6709\\u610F\\u8BC6\\u5230\\u201C\\u7B2C\\u4E00\\u6B21\\u6DF9\\u6CA1\\u201D\\u8FD9\\u4E2A\\u5173\\u952E\\u4E8B\\u4EF6\\u7684\\u4EF7\\u503C\\u3002\")),mdx(\"hr\",null),mdx(\"h4\",null,\"3. \",mdx(\"strong\",{parentName:\"h4\"},\"\\u7B97\\u6CD5\\u8BBE\\u8BA1\\u8BEF\\u533A\\uFF1A\\u5FFD\\u89C6\\u6700\\u4F18\\u5B50\\u7ED3\\u6784\\uFF08Ignoring Optimal Substructure\\uFF09\")),mdx(\"p\",null,\"\\u8FD9\\u9053\\u9898\\u5177\\u6709\\u5178\\u578B\\u7684\",mdx(\"strong\",{parentName:\"p\"},\"\\u6700\\u77ED\\u8DEF\\u5F84/\\u6700\\u5C0F\\u5806\\u6269\\u5C55\"),\"\\u6027\\u8D28\\uFF1A\"),mdx(\"h5\",null,\"\\u2705 \\u6B63\\u786E\\u65B9\\u6CD5\\u7684\\u672C\\u8D28\\uFF1A\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"\\u5229\\u7528\\u6700\\u5C0F\\u5806\\u7EF4\\u62A4\\u5F53\\u524D\\u6700\\u4F4E\\u8FB9\\u754C\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"\\u6BCF\\u6B21\\u6269\\u5C55\\u6700\\u4F4E\\u70B9\\uFF0C\\u786E\\u4FDD\\u5F53\\u524D\\u6C34\\u4F4D\\u662F\\u6700\\u5C0F\\u53EF\\u6DF9\\u6CA1\\u9AD8\\u5EA6\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"\\u7C7B\\u4F3C\\u4E8E Dijkstra \\u7B97\\u6CD5\\u4E2D\\u7684\\u677E\\u5F1B\\u64CD\\u4F5C\\u3002\")),mdx(\"h5\",null,\"\\u274C \\u9519\\u8BEF\\u65B9\\u6CD5\\u7684\\u95EE\\u9898\\uFF1A\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"\\u6CA1\\u6709\\u5229\\u7528\\u4F18\\u5148\\u961F\\u5217\\u7684\\u201C\\u6700\\u5C0F\\u9AD8\\u5EA6\\u4F18\\u5148\\u201D\\u7279\\u6027\\u6765\\u9A71\\u52A8\\u6574\\u4E2A\\u641C\\u7D22\\u6D41\\u7A0B\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"\\u6DF7\\u5408\\u4F7F\\u7528\\u4E86 BFS\\u3001DFS \\u548C\\u8D2A\\u5FC3\\u7B56\\u7565\\uFF0C\\u5BFC\\u81F4\\u72B6\\u6001\\u5931\\u63A7\\u3002\")),mdx(\"hr\",null),mdx(\"h3\",null,\"\\u{1F9E9} \\u601D\\u7EF4\\u6A21\\u5F0F\\u9AD8\\u7EF4\\u5206\\u89E3\\u56FE\"),mdx(\"table\",null,mdx(\"thead\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"thead\"},mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"\\u7EF4\\u5EA6\"),mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"\\u9519\\u8BEF\\u6A21\\u5F0F\"),mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"\\u6B63\\u786E\\u6A21\\u5F0F\"))),mdx(\"tbody\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"\\u62BD\\u8C61\\u5C42\\u7EA7\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"\\u5C40\\u90E8\\u6A21\\u62DF\\uFF0C\\u7F3A\\u4E4F\\u7EDF\\u4E00\\u6C34\\u4F4D\\u62BD\\u8C61\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"\\u5168\\u5C40\\u6C34\\u4F4D\\u4E0A\\u6DA8\\u6A21\\u578B\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"\\u63A7\\u5236\\u6D41\\u7ED3\\u6784\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"\\u591A\\u5C42\\u5D4C\\u5957\\u5FAA\\u73AF + \\u591A\\u91CD\\u6761\\u4EF6\\u5206\\u652F\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"\\u5355\\u4E00\\u4F18\\u5148\\u961F\\u5217\\u9A71\\u52A8\\u6D41\\u7A0B\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"\\u6570\\u636E\\u7ED3\\u6784\\u4F7F\\u7528\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"\\u5806\\u4EC5\\u7528\\u4E8E\\u5C40\\u90E8\\u641C\\u7D22\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"\\u5806\\u9A71\\u52A8\\u5168\\u5C40\\u6269\\u5C55\\u987A\\u5E8F\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"\\u8BBF\\u95EE\\u673A\\u5236\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"\\u53CC\\u91CD visited \\u63A7\\u5236\\uFF0C\\u903B\\u8F91\\u6DF7\\u4E71\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"\\u5355\\u4E00 visited + \\u6700\\u65E9\\u8BBF\\u95EE\\u5373\\u6700\\u65E9\\u6DF9\\u6CA1\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"\\u95EE\\u9898\\u5EFA\\u6A21\\u65B9\\u5F0F\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"\\u5206\\u6CBB\\u5904\\u7406\\u6BCF\\u4E2A\\u201C\\u5751\\u201D\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"\\u6574\\u4F53\\u5730\\u5F62\\u6D2A\\u6C34\\u6A21\\u62DF\")))),mdx(\"hr\",null),mdx(\"h3\",null,\"\\u{1F9ED} \\u8BA4\\u77E5\\u5347\\u7EA7\\u5EFA\\u8BAE\"),mdx(\"p\",null,\"\\u8981\\u8DF3\\u51FA\\u8FD9\\u7C7B\\u601D\\u7EF4\\u8BEF\\u533A\\uFF0C\\u53EF\\u4EE5\\u5C1D\\u8BD5\\u4EE5\\u4E0B\\u601D\\u7EF4\\u65B9\\u5F0F\\uFF1A\"),mdx(\"h4\",null,\"\\u2705 1. \",mdx(\"strong\",{parentName:\"h4\"},\"\\u5BFB\\u627E\\u6838\\u5FC3\\u62BD\\u8C61\\u53D8\\u91CF\")),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"\\u5728\\u672C\\u9898\\u4E2D\\uFF0C\\u201C\\u5F53\\u524D\\u6C34\\u4F4D\\u201D\\u5C31\\u662F\\u552F\\u4E00\\u91CD\\u8981\\u7684\\u53D8\\u91CF\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"\\u6240\\u6709\\u64CD\\u4F5C\\u90FD\\u5E94\\u8BE5\\u56F4\\u7ED5\\u5B83\\u8FDB\\u884C\\u66F4\\u65B0\\u548C\\u6BD4\\u8F83\\u3002\")),mdx(\"h4\",null,\"\\u2705 2. \",mdx(\"strong\",{parentName:\"h4\"},\"\\u7528\\u7269\\u7406\\u8FC7\\u7A0B\\u7C7B\\u6BD4\\u7B97\\u6CD5\\u884C\\u4E3A\")),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"\\u60F3\\u8C61\\u771F\\u5B9E\\u7684\\u6C34\\u6162\\u6162\\u4E0A\\u6DA8\\u7684\\u8FC7\\u7A0B\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"\\u8FD9\\u6837\\u80FD\\u81EA\\u7136\\u5F15\\u5BFC\\u51FA\\u4F18\\u5148\\u961F\\u5217\\u548C\\u6C34\\u4F4D\\u9012\\u589E\\u7684\\u601D\\u8DEF\\u3002\")),mdx(\"h4\",null,\"\\u2705 3. \",mdx(\"strong\",{parentName:\"h4\"},\"\\u8FFD\\u6C42\\u201C\\u4E8B\\u4EF6\\u9A71\\u52A8\\u201D\\u7684\\u7F16\\u7A0B\\u601D\\u60F3\")),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"\\u6BCF\\u4E2A\\u70B9\\u88AB\\u8BBF\\u95EE\\u65F6\\u662F\\u4E00\\u4E2A\\u201C\\u4E8B\\u4EF6\\u201D\\uFF0C\\u89E6\\u53D1\\u6C34\\u4F4D\\u66F4\\u65B0\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"\\u800C\\u4E0D\\u662F\\u7528\\u5FAA\\u73AF\\u53BB\\u201C\\u5F3A\\u884C\\u201D\\u904D\\u5386\\u6240\\u6709\\u53EF\\u80FD\\u3002\")),mdx(\"h4\",null,\"\\u2705 4. \",mdx(\"strong\",{parentName:\"h4\"},\"\\u7B80\\u5316\\u95EE\\u9898\\u800C\\u975E\\u590D\\u6742\\u5316\\u5904\\u7406\")),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"\\u4E0D\\u8981\\u8BD5\\u56FE\\u5728\\u4EE3\\u7801\\u91CC\\u89E3\\u51B3\\u6240\\u6709\\u8FB9\\u754C\\u60C5\\u51B5\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"\\u5982\\u679C\\u4E00\\u4E2A\\u95EE\\u9898\\u770B\\u8D77\\u6765\\u5F88\\u590D\\u6742\\uFF0C\\u90A3\\u53EF\\u80FD\\u662F\\u5EFA\\u6A21\\u65B9\\u5F0F\\u9519\\u4E86\\u3002\")),mdx(\"hr\",null),mdx(\"h3\",null,\"\\u{1F3AF} \\u7ED3\\u8BED\"),mdx(\"p\",null,\"\\u8FD9\\u6BB5\\u4EE3\\u7801\\u672C\\u8D28\\u4E0A\\u8E29\\u8FDB\\u4E86\\u201C\",mdx(\"strong\",{parentName:\"p\"},\"\\u5FAE\\u89C2\\u6A21\\u62DF\\u9677\\u9631\"),\"\\u201D\\uFF1A\\u8BD5\\u56FE\\u4ECE\\u7EC6\\u8282\\u4E0A\\u8FD8\\u539F\\u6BCF\\u4E00\\u4E2A\\u79EF\\u6C34\\u573A\\u666F\\uFF0C\\u5374\\u5FFD\\u7565\\u4E86\\u6574\\u4F53\\u7CFB\\u7EDF\\u7684\\u884C\\u4E3A\\u89C4\\u5F8B\\u3002\\u771F\\u6B63\\u7684\\u9AD8\\u6548\\u89E3\\u6CD5\\u5F80\\u5F80\\u6765\\u6E90\\u4E8E\\u5BF9\\u7CFB\\u7EDF\\u5B8F\\u89C2\\u884C\\u4E3A\\u7684\\u7406\\u89E3\\u4E0E\\u5EFA\\u6A21\\u3002\"),mdx(\"p\",null,\"\\u201C\\u806A\\u660E\\u7684\\u7B97\\u6CD5\\u4E0D\\u5728\\u4E8E\\u5199\\u5F97\\u591A\\u590D\\u6742\\uFF0C\\u800C\\u5728\\u4E8E\\u6293\\u4F4F\\u90A3\\u4E2A\\u6700\\u7B80\\u5355\\u7684\\u7269\\u7406\\u89C4\\u5219\\u3002\\u201D\"))}MDXContent.isMDXComponent=!0;\n","scope":{}},"id":"daily-thought-fallacies","tags":["algorithm","thought-process","model","simulation","template"]},"__N_SSG":true}